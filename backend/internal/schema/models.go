package schema

import "time"

// Domain represents a business domain category
type Domain string

const (
	DomainSales      Domain = "sales"
	DomainMarketing  Domain = "marketing"
	DomainFinance    Domain = "finance"
	DomainOperations Domain = "operations"
	DomainHR         Domain = "hr"
	DomainCustomer   Domain = "customer"
	DomainProduct    Domain = "product"
	DomainGaming     Domain = "gaming"
	DomainSlack      Domain = "slack"
	DomainCOVID      Domain = "covid"
	DomainBirthNames Domain = "birth_names"
	DomainGeneral    Domain = "general"
)

// Intent represents the type of analytics intent
type Intent string

const (
	IntentAnalytics     Intent = "analytics"
	IntentComparison    Intent = "comparison"
	IntentTrend         Intent = "trend"
	IntentDrillDown     Intent = "drill_down"
	IntentSummary       Intent = "summary"
	IntentVisualization Intent = "visualization"
)

// ColumnInfo represents metadata about a database column
type ColumnInfo struct {
	Name         string   `json:"name"`
	Type         string   `json:"type"`
	DataType     string   `json:"data_type"`     // varchar, int, timestamp, etc.
	Description  string   `json:"description,omitempty"`
	IsMetric     bool     `json:"is_metric"`     // revenue, count, amount fields
	IsDimension  bool     `json:"is_dimension"`  // category, status, region fields
	IsDatetime   bool     `json:"is_datetime"`   // date/time columns
	IsID         bool     `json:"is_id"`         // primary/foreign key columns
	IsCurrency   bool     `json:"is_currency"`   // monetary fields
	SampleValues []string `json:"sample_values,omitempty"` // for understanding data patterns
	Nullable     bool     `json:"nullable"`
	Unique       bool     `json:"unique"`
}

// TableContext represents metadata about a database table
type TableContext struct {
	TableName    string       `json:"table_name"`
	Schema       string       `json:"schema,omitempty"`
	Domain       Domain       `json:"domain"`
	Description  string       `json:"description"`
	Columns      []ColumnInfo `json:"columns"`
	SampleValues []string     `json:"sample_values,omitempty"`
	BusinessTags []string     `json:"business_tags"`
}

// BusinessGlossary represents business terminology definitions
type BusinessGlossary struct {
	Term        string `json:"term"`
	Definition  string `json:"definition"`
	Domain      Domain `json:"domain"`
	Synonyms    []string `json:"synonyms,omitempty"`
	RelatedTerms []string `json:"related_terms,omitempty"`
}

// QueryPattern represents common query patterns for a domain
type QueryPattern struct {
	Pattern     string   `json:"pattern"`
	Domain      Domain   `json:"domain"`
	Intent      Intent   `json:"intent"`
	Keywords    []string `json:"keywords"`
	Description string   `json:"description"`
	Examples    []string `json:"examples"`
}

// DomainContext aggregates all context for a business domain
type DomainContext struct {
	Domain       Domain             `json:"domain"`
	Description  string             `json:"description"`
	Tables       []TableContext     `json:"tables"`
	Glossary     []BusinessGlossary `json:"glossary"`
	Patterns     []QueryPattern     `json:"patterns"`
	Keywords     []string           `json:"keywords"`
	Metrics      []string           `json:"metrics"`
	Dimensions   []string           `json:"dimensions"`
	Confidence   float64            `json:"confidence"`    // confidence in domain classification
	DataSource   string             `json:"data_source"`   // connector ID that generated this context
	AutoGenerated bool              `json:"auto_generated"` // true if generated from schema analysis
	LastUpdated  time.Time          `json:"last_updated"`
}

// SchemaContext represents the complete schema analysis for a data source
type SchemaContext struct {
	ConnectorID     string           `json:"connector_id"`
	ConnectorName   string           `json:"connector_name"`
	ConnectorType   string           `json:"connector_type"`
	Tables          []TableContext   `json:"tables"`
	DetectedDomains []DomainContext  `json:"detected_domains"`
	PrimaryDomain   Domain           `json:"primary_domain"`
	Confidence      float64          `json:"confidence"`
	SampleQueries   []string         `json:"sample_queries"`
	BusinessMetrics []BusinessMetric `json:"business_metrics"`
	AnalyzedAt      time.Time        `json:"analyzed_at"`
}

// BusinessMetric represents an identified business metric
type BusinessMetric struct {
	Name        string   `json:"name"`        // revenue, orders, conversions
	Description string   `json:"description"` // Total revenue from sales
	Type        string   `json:"type"`        // sum, count, avg, ratio
	Table       string   `json:"table"`       // source table
	Column      string   `json:"column"`      // source column
	Dimensions  []string `json:"dimensions"`  // related dimension columns
	Domain      Domain   `json:"domain"`      // business domain
	Keywords    []string `json:"keywords"`    // for query matching
}

// TableRelationship represents relationships between tables
type TableRelationship struct {
	FromTable    string `json:"from_table"`
	ToTable      string `json:"to_table"`
	FromColumn   string `json:"from_column"`
	ToColumn     string `json:"to_column"`
	RelationType string `json:"relation_type"` // one_to_many, many_to_many, one_to_one
	Confidence   float64 `json:"confidence"`
}